/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include "keymap_french.h"

#define BASE       0
#define NAV        1
#define MOUSE      2
#define MEDIA      3
#define NUM        4
#define SYM        5
#define FUN        6
#define SFT_SYM    7
#define LYR_LCK    8

&mt {
    tapping-term-ms = <175>;
    flavor = "tap-preferred";
};

&sk {
     release-after-ms = <2000>;
     quick-release;
};

&mmv {
    acceleration-exponent=<1>;
    time-to-max-speed-ms = <200>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ { 
	macros {

	};

	combos {

	};
	behaviors {
		td_quote: tap_dance_mod_tap {
			compatible = "zmk,behavior-tap-dance";
			label = "TAP_DANCE_MOD_TAP";
			#binding-cells = <0>;
			tapping-term-ms = <175>;
			bindings = <&mt FR_EXLM FR_DQUO>, <&kp FR_QUOT>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

		base_layer {
			bindings = <
				&kp FR_Q			&mt FR_CIRC FR_W	&mt LA(FR_ASTR) FR_F	&mt LA(FR_PLUS) FR_P	&mt FR_DIAE FR_G			&mt FR_DIAE FR_J	&mt LA(FR_PLUS) FR_L	&mt LA(FR_ASTR) FR_O	&mt FR_CIRC FR_Y	&td_quote
				&mt LMETA FR_A		&mt LALT FR_R		&mt LCTRL FR_S			&mt LSHFT FR_T			&kp FR_D 					&kp FR_H			&mt RSHFT FR_N			&mt RCTRL FR_E			&mt RALT FR_I		&mt RMETA FR_U
				&lt LYR_LCK FR_Z	&kp FR_X			&mt FR_CCED FR_C		&kp FR_V				&kp FR_B 					&kp FR_K			&kp FR_M 				&kp FR_COMM				&kp FR_SCLN			&kp FR_COLN
														&lt MEDIA ESC 			&lt NAV SPACE			&lt MOUSE TAB				&lt NUM ENTER		&lt SYM BSPC			&lt FUN DEL
			>;
		};
		
		nav_layer {
			bindings = <
				&kp LC(FR_Z)	&kp LS(DEL)		&kp LC(INS)		&kp LS(INS)		&mt FR_G LC(LS(FR_Z))			&none				&kp HOME			&kp UP_ARROW		&kp END				&none
				&kp LMETA 		&kp LALT		&kp LCTRL 		&kp LSHFT 		&kp LC(FR_D) 					&kp CAPSLOCK		&kp LEFT_ARROW		&kp DOWN_ARROW		&kp RIGHT_ARROW		&kp PG_UP
				&to BASE		&kp RALT		&none			&none			&none	 						&none				&none	 			&none				&none				&kp PG_DN
													&none 		&none			&none							&kp ENTER			&kp BSPC			&kp DEL
			>;
		};

		mouse_layer {
			bindings = <
				&kp LC(FR_Z)	&kp LS(DEL)		&kp LC(INS)		&kp LS(INS)		&mt FR_G LC(LS(FR_Z))			&none			&mmv SCROLL_LEFT	&mmv MOVE_UP		&mmv SCROLL_RIGHT		&none
				&kp LMETA 		&kp LALT		&kp LCTRL 		&kp LSHFT 		&kp LC(FR_D) 					&caps_word		&mmv MOVE_LEFT 		&mmv MOVE_DOWN		&mmv MOVE_RIGHT			&mmv SCROLL_UP
				&to BASE		&kp RALT		&none			&none			&none	 						&none			&none	 			&none				&none					&mmv SCROLL_DOWN
													&none 		&none			&none							&mkp RCLK		&mkp LCLK			&mkp MCLK
			>;
		};
		
			arrow_layer {
		bindings = <
	    &kp F1	&kp F2	&kp F3		&kp F4		&kp F5			&mmv MOVE_LEFT	&mmv MOVE_DOWN	&mmv MOVE_UP	&mmv MOVE_RIGHT	&kp HOME
	    &kp F6	&kp F7  &mkp RCLK	&mkp LCLK	&kp F10			&kp LEFT		&kp DOWN		&kp UP			&kp RIGHT		&trans
	    &trans	&trans	&trans		&trans		&trans			&trans			&kp C_BRI_DN	&kp C_BRI_UP	&trans			&trans
	    				            &trans		&trans		&trans			&trans			&trans			&trans
		>;
        };
	};
};
